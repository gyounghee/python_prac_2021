---------------------------------- 첫 번 째 답 안 [수정히야함(효율성 문제)] ------------------------------------------

# 완주하지 못한 선수
# 마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 
# 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성하라

# * 제한사항 *
# - 마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.
# - completion의 길이는 participant의 길이보다 1 작습니다.
# - 참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.
# - 참가자 중에는 동명이인이 있을 수 있습니다.


# 내 답안
def solution(participant, completion):
   answer = ''
   for i in completion :
       participant.remove(i)
   answer = ",".join(participant)
   return answer

# TEST CASE Ⅰ
participant = ["mislav", "stanko", "mislav", "ana"]
completion = ["stanko", "ana", "mislav"]
print(solution(participant, completion))




---------------------------------- 두 번 째 답 안 ------------------------------------------

# 월간 코드 챌린지 시즌1 - 두 개 뽑아서 더하기
# 정수 배열 numbers가 주어진다. 
# numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 
# 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요.

# * 제한사항 *
# - numbers의 길이는 2 이상 100 이하입니다.
# -- numbers의 모든 수는 0 이상 100 이하입니다.

def solution(numbers):
    answer = []
    for i in range(0,len(numbers)-1):
        for j in range(i+1,len(numbers)):
            n = numbers[i] + numbers[j]
            if n not in answer : answer.append(n)
    answer.sort()
    return answer

# TEST CASE Ⅰ
numbers = [2,1,3,4,1]
print(solution(numbers))  # [2,3,4,5,6,7]

# TEST CASE Ⅱ
numbers = [5,0,2,7]
print(solution(numbers))  # [2,5,7,9,12]


# 다른사람 풀이
def solution(numbers):
    answer = []
    for i in range(len(numbers)):
        for j in range(i+1, len(numbers)):
            answer.append(numbers[i] + numbers[j])
    return sorted(list(set(answer)))
